name: Deploy Website

on:
  push:
    branches:
      - master
      - further_improvements

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pdoc
          pip install shinylive

      - name: Export Shiny App
        run: |
          shinylive export ./ site/
          # Title
          sed -i 's|<title>.*</title>|<title>MSAexplorer</title>|' site/index.html
          # Favicon for the app page (app served at /app/, favicon at site root)
          grep -q 'rel="icon"' site/index.html || \
          sed -i '/<\/title>/a\  <link rel="icon" type="image/svg+xml" href="../favicon.svg">' site/index.html
      - name: Inject splash overlay from file
        shell: bash
        run: |
          set -euo pipefail
          INDEX=site/index.html
          SPLASH=app_src/deploy_static/splash.html
          if [ ! -f "$SPLASH" ]; then
            echo "Splash file not found at $SPLASH"; exit 1
          fi
          # Insert right after the opening <body> tag
          sed -i '/<body[^>]*>/r '"$SPLASH"'' "$INDEX"

      - name: Generate API Docs
        run: |
          pdoc ./msaexplorer \
            --logo ../logo.svg \
            -o docs/

      - name: Prepare Deployment Directory
        run: |
          rm -rf public
          mkdir -p public/app public/docs
          # App and docs
          cp -r site/* public/app/
          cp -r docs/* public/docs/
          # Assets at site root so app/docs can reference via ../
          cp app_src/www/img/favicon.svg public/favicon.svg
          cp app_src/www/img/logo.svg public/logo.svg

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
