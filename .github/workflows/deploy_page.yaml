name: Deploy Website

on:
  push:
    branches:
      - master
      - further_improvements

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
      - uses: actions/checkout@v4

      # Set up Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Install dependencies (msaexplorer, pdoc, and shinylive)
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pdoc
          pip install shinylive

      # Export the Shiny app as a static site
      - name: Export Shiny App
        run: |
          shinylive export ./ site/ 
          # Change title
          sed -i.bak 's|<title>.*</title>|<title>MSAExplorer</title>|' site/index.html
          # Insert favicon link right after </title>
          awk '1;/<\/title>/{print "  <link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\">"}' site/index.html > site/index.tmp && mv site/index.tmp site/index.html

      # ⭐️ Inject custom splash overlay (replaces default spinner)
      - name: Inject custom splash overlay
        shell: bash
        run: |
          set -euo pipefail
          INDEX=site/index.html

          # Skip if already present (id="splash")
          if grep -q 'id="splash"' "$INDEX"; then
            echo "Splash already injected; skipping."
            exit 0
          fi

          # Create the overlay fragment
          cat > site/splash.html <<'HTML'
          <style>
            #splash{
              position:fixed; inset:0; display:grid; place-items:center;
              background:#fff; z-index:99999; font:16px/1.5 system-ui,-apple-system,Segoe UI,Roboto,sans-serif
            }
            #splash .box{ max-width:560px; text-align:center; padding:24px }
            #splash .title{
              font-size:20px; margin-bottom:6px; opacity:.9;
              animation:fadeInOut 2.4s ease-in-out infinite; will-change:opacity
            }
            @keyframes fadeInOut{ 0%{opacity:.2} 50%{opacity:1} 100%{opacity:.2} }
            @media (prefers-reduced-motion: reduce){ #splash .title{ animation:none !important } }
          </style>
          
          <div id="splash">
            <div class="box">
              <div class="title">Starting MSAexplorer…</div>
            </div>
          </div>
          
          <script>
          (function(){
            function fadeOut(){
              const el=document.getElementById("splash"); if(!el) return;
              el.style.opacity=1;
              (function fade(){ el.style.opacity-=0.08; if(el.style.opacity<=0){el.style.display="none"} else requestAnimationFrame(fade) })();
            }
            document.addEventListener("shiny:connected", fadeOut, { once:true });
            document.addEventListener("shiny:idle", fadeOut, { once:true });
            const root=document.getElementById("root");
            if(root && "MutationObserver" in window){
              const mo=new MutationObserver(()=>{ if(root.childElementCount>0){ mo.disconnect(); fadeOut(); }});
              mo.observe(root,{childList:true});
            }
            setTimeout(fadeOut, 12000); // last-resort fallback
          })();
          </script>
          HTML

          # Insert the fragment right after the opening <body> tag
          sed -i '/<body[^>]*>/r site/splash.html' "$INDEX"
          rm -f site/splash.html

      # Generate API documentation with pdoc
      - name: Generate API Docs
        run: |
          pdoc ./msaexplorer --logo 'https://raw.githubusercontent.com/jonas-fuchs/MSAexplorer/87c0ae2e2066d6e5146082c65ee8b61f23decbea/app_src/img/logo.svg' -o docs/

      # Prepare the deployment directory
      - name: Prepare Deployment Directory
        run: |
          rm -rf public
          mkdir -p public/app public/docs
          cp -r site/* public/app/
          cp -r docs/* public/docs/
          # Make sure favicon is at site root (your index references /favicon.svg)
          if [ -f favicon.svg ]; then cp favicon.svg public/; fi
          if [ -f favicon.ico ]; then cp favicon.ico public/; fi

      # Upload the combined public directory as an artifact for GitHub Pages deployment
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
